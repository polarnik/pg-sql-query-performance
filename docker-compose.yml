version: '3.2'

services:


  db:
    image: postgres:10.16
    container_name: sql_monitor_postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: test
      POSTGRES_USER: test
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgresql-data:/var/lib/postgresql/data
      - "./config/postgresql/run_dbdump.sh:/docker-entrypoint-initdb.d/run_dbdump.sh"
      - "./config/postgresql/monitoring_user.sql:/sql.tmp/monitoring_user.sql:ro"
      - "./config/postgresql/monitoring_stat_activity_count.sql:/sql.tmp/monitoring_stat_activity_count.sql:ro"
      - "./config/postgresql/monitoring_stat_activity_idle_in_transaction.sql:/sql.tmp/monitoring_stat_activity_idle_in_transaction.sql:ro"
      - "./config/postgresql/monitoring_stat_activity_idle.sql:/sql.tmp/monitoring_stat_activity_idle.sql:ro"
      - "./config/postgresql/monitoring_stat_activity_waiting.sql:/sql.tmp/monitoring_stat_activity_waiting.sql:ro"
      - "./config/postgresql/monitoring_stat_statements.sql:/sql.tmp/monitoring_stat_statements.sql:ro"
      - "./config/postgresql/demo-small-20170815.sql:/dbdump/demo.sql:ro"
      - "./config/postgresql/grafana_db.sql:/sql.tmp/grafana_db.sql:ro"
      - "./config/postgresql/bookings.functions.sql:/sql.tmp/bookings.functions.sql:ro"
    networks:
      - sql-test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --dbname=postgres --username=test"]
      interval: 10s
      timeout: 5s
      retries: 20


  influxdb:
    image: influxdb:1.8.6
    container_name: sql_monitor_influxdb
    restart: unless-stopped
    environment:
      - INFLUXDB_REPORTING_DISABLED=true
      - INFLUXDB_ADMIN_PASSWORD=password
      - INFLUXDB_ADMIN_USER=admin
    volumes:
      - influx-data:/var/lib/influxdb/
      - "./config/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro"
      - "./config/influxdb/init.jmeter.sh:/docker-entrypoint-initdb.d/init.jmeter.sh:ro"
      - "./config/influxdb/init.gatling.sh:/docker-entrypoint-initdb.d/init.gatling.sh:ro"
      - "./config/influxdb/init._internal.sh:/docker-entrypoint-initdb.d/init._internal.sh:ro"
      - "./config/influxdb/init.jmeter_graphite.sh:/docker-entrypoint-initdb.d/init.jmeter_graphite.sh:ro"
      - "./config/influxdb/init.telegraf_pg_demo.sh:/docker-entrypoint-initdb.d/init.telegraf_pg_demo.sh:ro"
      - "./config/influxdb/init.telegraf_pg_activity_demo.sh:/docker-entrypoint-initdb.d/init.telegraf_pg_activity_demo.sh:ro"
    ports:
      - 8086:8086
      - 2003:2003
      - 2002:2002
    networks:
      - sql-test-network
    healthcheck:
      test: ["CMD-SHELL", "curl -XGET localhost:8086/health"]
      interval: 10s
      timeout: 10s
      retries: 30

  clickhouse:
    image: yandex/clickhouse-server:21.6
    container_name: clickhouse
    ports:
      - 8123:8123
      - 9000:9000
    networks:
      - sql-test-network
    volumes:
      - "./config/clickhouse/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh"

  telegraf:
    image: telegraf:1.18.3
    container_name: sql_monitor_telegraf
    restart: unless-stopped
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_HOST=sql_monitor_influxdb
      - CONNECTION_STRING="postgres://telegraf_monitoring_user:pass@sql_monitor_postgres:5432/postgres"
      - PG_HOST=sql_monitor_postgres
      - STAND=demo
    networks:
      - sql-test-network
    volumes:
      - "./config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
      - "./config/telegraf/telegraf.d/inputs.postgresql_extensible.conf:/etc/telegraf/telegraf.d/inputs.postgresql_extensible.conf:ro"
    command: "telegraf --config /etc/telegraf/telegraf.conf --config-directory /etc/telegraf/telegraf.d/"
    healthcheck:
      test: ["CMD-SHELL", "curl -XGET localhost:8080"]
      interval: 10s
      timeout: 10s
      retries: 40

  grafana:
    image: grafana/grafana:8.0.3
    container_name: sql_monitor_grafana
    restart: unless-stopped
    depends_on:
      - db
      - influxdb
      - telegraf
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
    networks:
      - sql-test-network
    volumes:
      - grafana-data:/var/lib/grafana
      - "./config/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro"
      - "./config/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro"
      - "./config/grafana/grafana.ini:/etc/grafana/grafana.ini:ro"
    ports:
      - 3000:3000

  jmeter:
    container_name: sql_monitor_jmeter
    build:
      context: "./"
      dockerfile: "Dockerfile"
    depends_on:
      - db
      - influxdb
      - grafana
    volumes:
      - "./src:/tmp/src:ro"
      - "./pom.xml:/tmp/pom.xml:ro"
    networks:
      - sql-test-network
    restart: "no"
    command: "sh -c 'mvn clean verify -P jmeter,MaxPerf -Dtps=1.0  -Djmx=influx_1_test '"
    ports:
      - 4445:4445

networks:
  sql-test-network:

volumes:
  jmeter-m2:
  influx-data:
  grafana-data:
  postgresql-data: